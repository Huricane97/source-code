{"version":3,"sources":["img/BOTON3.gif","img/red.gif","fonts/Attack-Graffiti.ttf","components/QuantityF.jsx","components/NavBar.jsx","components/Landing.jsx","App.js","reportWebVitals.js","index.js","img/M233.png"],"names":["module","exports","__webpack_require__","p","require","config","price","price1","REACT_APP_CONTRACT_ADDRESS","process","totalnfts","remainingnfts","SELECTEDNETWORK","QuantityF","_useState","useState","_useState2","Object","slicedToArray","counter","setCounter","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setConnectedAccount","_loadWeb","asyncToGenerator","regenerator_default","a","mark","_callee2","web3","metaMaskAccount","splitedMetaMaskAddress","contractaddress","ct","current","wrap","_context2","prev","next","window","ethereum","Web3","enable","eth","net","getId","t0","sent","t1","getAccounts","console","log","substring","length","Contract","abi","methods","MINT_PRICE","call","totalSupply","Number","mint","send","from","value","alert","currentProvider","stop","apply","this","arguments","useEffect","_callee","_context","react_default","createElement","className","src","img1","width","class","img","onClick","loadWeb3","NavBar","href","index_esm","Landing","id","poster","muted","loop","autoplay","video","type","components_QuantityF","src_components_NavBar","App","src_components_Landing","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a5e4bdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BOTON3.87bd157c.gif\";","module.exports = __webpack_public_path__ + \"static/media/red.7758c8c1.gif\";","module.exports = __webpack_public_path__ + \"static/media/Attack-Graffiti.fa3f1ab4.ttf\";","import React from \"react\";\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport { useState, useEffect } from \"react\";\r\nimport './Quantity.css'\r\nimport Web3 from \"web3\";\r\nimport abi from \"./new.json\";\r\nimport img from '../img/BOTON3.gif';\r\nimport img1 from '../img/red.gif';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nrequire(\"dotenv\").config();\r\n\r\n\r\nconst { REACT_APP_CONTRACT_ADDRESS } = process.env;\r\nlet price\r\nvar totalnfts=5555;\r\nvar remainingnfts=3273;\r\nvar price1;\r\nconst SELECTEDNETWORKNAME = \"Ethereum Maintnet\";\r\nconst SELECTEDNETWORK = \"1\";\r\n\r\nconst QuantityF = () => {\r\n  \r\n\r\n  // const [price,setPrice] = useState();\r\n  const [counter, setCounter]= useState(1);\r\n  const [iswhitelist,setwhitelist]=useState(false);\r\n  const [errormsg,seterrormsg]=useState(false);\r\n    const [connectedAccount,setConnectedAccount] = useState(\"Connect Dapp\");\r\n    // const [contract, setContract] = useState(null);\r\n    // const [totalSupply, setTotalSupply] = useState(83);\r\n  \r\n  price=0.5;\r\n  remainingnfts=totalnfts-counter;\r\n  price1=price * counter;\r\n    \r\n    useEffect(async () => {\r\n      window.web3 = new Web3(window.ethereum);\r\n      // const ct = new web3.eth.Contract(abi, contractaddress);\r\n      const web3 = window.web3;\r\n      const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n      new web3.eth.Contract(abi, contractaddress);\r\n      // let current = await ct.methods.totalSupply().call();\r\n      // setTotalSupply(current);\r\n    }, []);\r\n    \r\n    async function loadWeb3() {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable();\r\n        const web3 = window.web3;\r\n        if(await web3.eth.net.getId() == SELECTEDNETWORK){\r\n          // Meta Mask Connected Account Address\r\n          let metaMaskAccount = await web3.eth.getAccounts();\r\n          metaMaskAccount = metaMaskAccount[0];\r\n          let splitedMetaMaskAddress;\r\n          console.log(\"contract\");\r\n          if (metaMaskAccount) {\r\n            splitedMetaMaskAddress =\r\n              metaMaskAccount[0].substring(0, 6) +\r\n              \"......\" +\r\n              metaMaskAccount[0].substring(\r\n                metaMaskAccount[0].length - 4,\r\n                metaMaskAccount[0].length\r\n              );\r\n          }\r\n          setConnectedAccount(splitedMetaMaskAddress);\r\n      \r\n            // // creating contract instance\r\n            const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n            const ct = new web3.eth.Contract(abi, contractaddress);\r\n            \r\n            price = await ct.methods.MINT_PRICE().call();\r\n            console.log(price);\r\n\r\n            price = price * counter;\r\n            \r\n            // setPrice(price);\r\n\r\n            let current = await ct.methods.totalSupply().call();\r\n            // setTotalSupply(current);\r\n            if (Number(current) === 500) {\r\n              setConnectedAccount(\"Sold out\");\r\n            }\r\n            await ct.methods\r\n              .mint(counter)\r\n              .send({ from: metaMaskAccount, value: price });\r\n            current = await ct.methods.totalSupply().call();\r\n            setCounter(1);\r\n            remainingnfts=totalnfts-counter;\r\n            price1=price * counter;\r\n          }\r\n          else{\r\n            alert(\"Please select Ethereum Mainnet in Metamask\");\r\n          }\r\n        } else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n          window.alert(\r\n            \"Non-Polygon browser detected. You should consider trying MetaMask!\"\r\n          );\r\n        }\r\n      }\r\n\r\n      const increment=()=>{ \r\n        if(counter>=10){\r\n          setCounter(10);\r\n        }\r\n        else{\r\n          setCounter(counter+1);\r\n          \r\n        }\r\n        price=0.5;\r\n        remainingnfts=totalnfts-counter;\r\n        price1=price * counter;\r\n      }\r\n      const decrement=()=>{\r\n        if (counter<=1){\r\n          setCounter(1);\r\n        }\r\n        else{\r\n          setCounter(counter-1);\r\n        }\r\n        price=0.5;\r\n        remainingnfts=totalnfts-counter;\r\n        price1 =price * counter;\r\n        \r\n      }\r\n      \r\n    async function whitelistchk(){\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable();\r\n        const web3 = window.web3;\r\n        // Meta Mask Connected Account Address\r\n        let metaMaskAccount = await web3.eth.getAccounts();\r\n        metaMaskAccount = metaMaskAccount[0];\r\n        let splitedMetaMaskAddress;\r\n        console.log(\"contract\");\r\n        if (metaMaskAccount) {\r\n          splitedMetaMaskAddress =\r\n            metaMaskAccount[0].substring(0, 6) +\r\n            \"......\" +\r\n            metaMaskAccount[0].substring(\r\n              metaMaskAccount[0].length - 4,\r\n              metaMaskAccount[0].length\r\n            );\r\n        }\r\n      \r\n      // console.log(metaMaskAccount);\r\n      // let lengthofwl= whitelistaddress.length;\r\n      // console.log(lengthofwl);\r\n      // for(var i=0;i<lengthofwl;i++){\r\n      //   // console.log(whitelistaddress[i]);\r\n      //   if(metaMaskAccount===whitelistaddress[i]){\r\n      //     setwhitelist(true);\r\n      //   }\r\n\r\n      // }\r\n      // seterrormsg(true);\r\n          \r\n      }\r\n\r\n    }\r\n\r\n\r\nreturn(\r\n  <div className=\"container\">\r\n    <div className=\"new\"><img src={img1} width={\"30px\"}></img></div>\r\n  <div>\r\n <div className=\"FontFam\"><h3>PRESALE IS LIVE</h3> </div>\r\n\r\n  <div class=\"container\">\r\n  <div class=\"row row1\">\r\n    <div class=\"col col1\">\r\n    <img src={img} width={\"130px\"}></img>\r\n    </div>\r\n    <div class=\"col col2\">\r\n    <h5 className=\"styl\">Price Per Mint</h5>\r\n    <p className=\"styl1\">0.5 Eth Each</p>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div>\r\n    \r\n    \r\n  </div>\r\n\r\n\r\n  <div className=\"NewDiv\">  \r\n  <div className=\"button1\"><button onClick={decrement}>-</button></div>\r\n  <div className=\"FontFam1 \"><h3>{counter}</h3></div> \r\n  <div className=\"button2\"><button onClick={increment}>+</button></div>\r\n  </div>\r\n  <div className=\"space\"><h5 className=\"text\">Total  &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     {price1} Ether</h5></div><hr/>\r\n  <button className=\"button mintbutton\" onClick={() => {loadWeb3();}}>MINT</button>\r\n  <hr/>\r\n  <div><h5>{remainingnfts}/{totalnfts}</h5></div>\r\n  </div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n\r\nexport default QuantityF;","import React from 'react';\r\nimport './NavBar.css'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport {FaTwitter} from 'react-icons/fa';\r\nimport {FaInstagram} from 'react-icons/fa';\r\nimport {FaDiscord} from 'react-icons/fa';\r\nimport {FaFacebook} from 'react-icons/fa';\r\n\r\n\r\n\r\nconst NavBar=()=>{\r\n\r\n    return(\r\n\r\n        <div className=\"container\"><nav class=\"navbar navbar-expand-lg bg-transparent\">\r\n        {/* <div class=\"col Col11 \" id=\"navbarText\">\r\n          <ul class=\"navbar-nav mr-auto justify-content-center\">\r\n            <li class=\"nav-item\">\r\n              <a href=\"https://maecenaslab.com/\"><img src={img} height={\"120px\"} onClick={\"https://maecenaslab.com/\"}></img></a>\r\n            </li>\r\n          </ul>\r\n        </div> */}\r\n        <div className=\"col Col12\">\r\n        <ul class=\"navbar-nav mr-auto justify-content-center\">\r\n            <li class=\"nav-item Col111\">\r\n            <a href=\"https://discord.gg/karafuru\"> <h2 className='ColorNew'><FaDiscord/> </h2></a>\r\n            </li>\r\n            <li class=\"nav-item Col111\">\r\n            <a href=\"https://twitter.com/karafurunft\"> <h2 className='ColorNew'><FaTwitter/></h2></a>\r\n            </li>\r\n            <li class=\"nav-item Col111\">\r\n            <a href=\"https://facebook.com\"> <h2 className='ColorNew'><FaFacebook/></h2></a>\r\n      \r\n            </li>\r\n            <li class=\"nav-item Col111\">\r\n            <a href=\"https://instagram.com/karafuru\"> <h2 className='ColorNew'><FaInstagram/></h2></a>\r\n      \r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav></div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport './Landing.css';\r\nimport QuantityF from \"./QuantityF\";\r\nimport NavBar from './NavBar';\r\nimport video from '../img/M233.png';\r\nimport img from '../img/M233.png'\r\n\r\nconst Landing =()=>{\r\n\r\n    return(\r\n      \r\n    <div className=\"Hero image-fluid\">\r\n      <div className=\"bgColor\">\r\n      <script>\r\n    document.getElementById('vid').play();\r\n</script>\r\n<div className=\"center\">\r\n      <video id=\"myVideo\" poster={img}  muted loop autoplay=\"autoplay\" >\r\n       <source src={video} type=\"video/mp4\"/>\r\n       </video></div>\r\n      <div className=\"\">\r\n\r\n            <div class=\"container\">\r\n              <div class=\"row row1 justify-content-around\">\r\n               <div class=\"col-4 firstcol1\">\r\n               <div><QuantityF/></div>\r\n                </div>\r\n                <div><NavBar/></div>\r\n              </div>\r\n            </div>\r\n     </div>\r\n    </div>\r\n  </div>\r\n    );\r\n  \r\n  \r\n  \r\n  \r\n  }\r\n  \r\n  \r\n  export default Landing;","import React from 'react';\nimport './App.css';\nimport Landing from './components/Landing';\n\nfunction App() {\n  return (\n\n    <div>\n      <Landing/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../src/fonts/Attack-Graffiti.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/M233.aa0075be.png\";"],"sourceRoot":""}